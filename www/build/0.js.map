{"version":3,"sources":["../../src/pages/words-viewer/words-viewer.module.ts","../../src/pages/words-viewer/words-viewer.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { WordsViewerPage } from './words-viewer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WordsViewerPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(WordsViewerPage),\r\n  ],\r\n})\r\nexport class WordsViewerPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/words-viewer/words-viewer.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, LoadingController, AlertController } from 'ionic-angular';\r\nimport { HomePage } from './../home/home';\r\nimport Word from './../../model/Word';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-words-viewer',\r\n  templateUrl: 'words-viewer.html',\r\n})\r\n\r\nexport class WordsViewerPage {\r\n\r\n  /**\r\n   * @param wordsType is a type of words - known words, words for repeating, etc.\r\n   */\r\n  wordsType: any;\r\n\r\n  /**\r\n   * @param words is an array of words in a corresponding array (array of known words, learned, etc.)\r\n   */\r\n  words: any;\r\n\r\n  /**\r\n   * @param wordTypeHeader is a header for each type of words, kind of identification of what words you are looking at\r\n   */\r\n  wordTypeHeader: string;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public alertCtrl: AlertController, public loadCtrl: LoadingController) {}\r\n\r\n  ionViewDidEnter() {\r\n    this.wordsType = this.navParams.data;\r\n    this.refreshWords();\r\n\r\n    if (this.wordsType == \"knownWords\") this.wordTypeHeader = \"Известные слова\";\r\n    else if (this.wordsType == \"learnedWords\") this.wordTypeHeader = \"Изученные слова\";\r\n    else if (this.wordsType == \"toRepeatWords\") this.wordTypeHeader = \"Слова для повторного изучения\";\r\n  }\r\n\r\n  /**\r\n   * @return a word from a huge list if there is one -> it will display both translations and pronunciation\r\n   */\r\n  findWord() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Найти слово',\r\n      inputs: [{\r\n        name: 'enWord',\r\n        placeholder: 'Слово'\r\n      }],\r\n      buttons: [{\r\n          text: 'Найти',\r\n          handler: data => {\r\n            var word = data.enWord;\r\n\r\n            var enwords = [];\r\n\r\n            for (var i = 0; i < this.words.length; i++) {\r\n              enwords.unshift(this.words[i].enWord.toUpperCase());\r\n            }\r\n\r\n            if (enwords.indexOf(word.toUpperCase()) != -1) {\r\n              for (var q = 0; q < this.words.length; q++) {\r\n                if (this.words[q].enWord.toUpperCase() == word.toUpperCase()) {\r\n\r\n                  var _sender = {\r\n                    word: this.words[q],\r\n                    type: this.wordsType\r\n                  }\r\n\r\n                  this.navCtrl.push('PreviewExactWordPage', _sender);\r\n                }\r\n              }\r\n            } else this.wordNotFound(word);\r\n          }\r\n        },\r\n        {\r\n          text: 'Отмена',\r\n          handler: data => {}\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  /**\r\n   * @param word is word that is not found\r\n   * @return an alert telling that there is not such word \r\n   */\r\n  wordNotFound(word) {\r\n    this.alertCtrl.create({\r\n      title: 'Ошибка',\r\n      subTitle: \"<b>\" + word + \"</b> не найдено.\",\r\n      buttons: ['OK']\r\n    }).present();\r\n  }\r\n\r\n  /**\r\n   * @param word is a word that is already on the list\r\n   * @return an alert telling that there is already such word added before\r\n   */\r\n  wordExists(word) {\r\n    this.alertCtrl.create({\r\n      title: 'Ошибка',\r\n      subTitle: word + ' уже в списке',\r\n      buttons: ['OK']\r\n    }).present();\r\n  }\r\n\r\n  /**\r\n   * move all words from the current list to list for repeating\r\n   */\r\n  repeatOnceMore() {\r\n    this.alertCtrl.create({\r\n      title: '<span class=\"monts\">Повторить слова</span>',\r\n      subTitle: '<span class=\"monts\">Вы хотите переместить все слова в список для повтора?</span>',\r\n      buttons: [{\r\n          text: 'Да',\r\n          handler: data => {\r\n            var repeatList = JSON.parse(localStorage.getItem(\"toRepeatWords\"));\r\n\r\n            for (var i = 0; i < this.words.length; i++) {\r\n              repeatList.unshift(this.words[i]);\r\n            }\r\n\r\n            localStorage.setItem(\"toRepeatWords\", JSON.stringify(repeatList));\r\n            localStorage.setItem(this.wordsType, \"[]\");\r\n\r\n            this.navCtrl.setRoot(HomePage);\r\n          }\r\n        },\r\n        {\r\n          text: 'Нет'\r\n        }\r\n      ]\r\n    }).present();\r\n  }\r\n\r\n  /**\r\n   * @param this.words will be refreshed\r\n   */\r\n  refreshWords() {\r\n      this.words = JSON.parse(localStorage.getItem(this.wordsType));\r\n  }\r\n\r\n  /**\r\n   * @param word is word that will be previewed\r\n   * @return a new screen with a chosen word, where there are both translations\r\n   */\r\n  previewWord(word) {\r\n    var _sender = {\r\n      word: word,\r\n      type: this.wordsType\r\n    }\r\n\r\n    this.navCtrl.push('PreviewExactWordPage', _sender);\r\n  }\r\n\r\n  /**\r\n   * display an alert message where you can manually add a word to the list\r\n   */\r\n  presentPrompt() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Добавить слово',\r\n      inputs: [{\r\n          name: 'enWord',\r\n          placeholder: 'Английское слово'\r\n        },\r\n        {\r\n          name: 'ruWord',\r\n          placeholder: 'Русское слово'\r\n        }\r\n      ],\r\n      buttons: [{\r\n          text: 'Добавить',\r\n          handler: data => {\r\n            var WORD = new Word(data.ruWord, data.enWord);\r\n            var wordsList = JSON.parse(localStorage.getItem(this.wordsType));\r\n\r\n            wordsList.unshift(new Word(data.ruWord, data.enWord));\r\n            localStorage.setItem(this.wordsType, JSON.stringify(wordsList));\r\n            this.refreshWords();\r\n          }\r\n        },\r\n        {\r\n          text: 'Отмена',\r\n          handler: data => {}\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  /**\r\n   * @return an alert with 2 options - delete a word or move it to the list for repeating\r\n   */\r\n  wordActions(word) {\r\n    this.alertCtrl.create({\r\n      title: 'Выберете действие',\r\n      subTitle: \"Что сделать с этим словом?\",\r\n      buttons: [{\r\n          text: 'Удалить',\r\n          handler: data => {\r\n            this.alertCtrl.create({\r\n              title: 'Действительно?',\r\n              subTitle: 'Вы точно хотите удалить <b>' + word.enWord + '</b>',\r\n              buttons: [{\r\n                  text: 'Да',\r\n                  handler: data => {\r\n                    var ind = this.words.indexOf(word);\r\n                    this.words.splice(ind, 1);\r\n                    localStorage.setItem(this.wordsType, JSON.stringify(this.words));\r\n\r\n                    this.refreshWords();\r\n                  }\r\n                },\r\n                {\r\n                  text: 'Нет',\r\n                  handler: data => {}\r\n                }\r\n              ]\r\n            }).present();\r\n          }\r\n        },\r\n        {\r\n          text: 'На повторение',\r\n          handler: data => {\r\n            var ind = this.words.indexOf(word);\r\n            this.words.splice(ind, 1);\r\n            localStorage.setItem(this.wordsType, JSON.stringify(this.words));\r\n\r\n            var repeatWords = JSON.parse(localStorage.getItem(\"toRepeatWords\"));\r\n            repeatWords.unshift(word);\r\n            localStorage.setItem(\"toRepeatWords\", JSON.stringify(repeatWords));\r\n\r\n            this.refreshWords();\r\n          }\r\n        }\r\n      ]\r\n    }).present();\r\n  }\r\n\r\n  /**\r\n   * @param word is a word typeof string\r\n   * @return same string but in 'eina' font\r\n   */\r\n  eina(word) {\r\n    return '<span class=\"eina\">' + word + '</span>';\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/words-viewer/words-viewer.ts"],"sourceRoot":""}