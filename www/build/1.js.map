{"version":3,"sources":["../../src/pages/word-test/word-test.module.ts","../../src/pages/word-test/word-test.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { WordTestPage } from './word-test';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WordTestPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(WordTestPage),\r\n  ],\r\n})\r\nexport class WordTestPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/word-test/word-test.module.ts","import {\r\n  Component\r\n} from '@angular/core';\r\nimport {\r\n  IonicPage,\r\n  NavController,\r\n  NavParams,\r\n  AlertController,\r\n  LoadingController\r\n} from 'ionic-angular';\r\nimport Word from './../../model/Word';\r\nimport { HomePage } from '../home/home';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-word-test',\r\n  templateUrl: 'word-test.html',\r\n})\r\nexport class WordTestPage {\r\n\r\n  /**\r\n   * @param randomWord is a word that is being displayed on a screen\r\n   */\r\n  randomWord: Word;\r\n\r\n  /**\r\n   * @param started states whether test has been started or not\r\n   */\r\n  started: boolean;\r\n\r\n  /**\r\n   * @param words are words that need to be repeated, taken from 'toRepeatWords' array\r\n   */\r\n  words: any;\r\n\r\n  /**\r\n   * @param wordsBank are words that are in a word bank, multiple choice words are taken from this array\r\n   */\r\n  wordsBank: any;\r\n\r\n  /**\r\n   * @param learnedWords are word that user has already learned\r\n   */\r\n  learnedWords: any;\r\n\r\n  /**\r\n   * @param button are multiple choices, each button has different translation of a word\r\n   */\r\n  buttons = [];\r\n\r\n  /**\r\n   * @param type stands for word test type -> from RU to EN or from EN to RU\r\n   */\r\n  type: string;\r\n\r\n  constructor(public loadCtrl: LoadingController, public navCtrl: NavController, public navParams: NavParams, public alertCtrl: AlertController) {\r\n    this.started = false;\r\n    this.words = JSON.parse(localStorage.getItem(\"toRepeatWords\"));\r\n    this.wordsBank = JSON.parse(localStorage.getItem(\"wordsBank\"));\r\n    this.learnedWords = JSON.parse(localStorage.getItem(\"learnedWords\"));\r\n  }\r\n\r\n  ionViewDidLoad() {}\r\n\r\n  /**\r\n   * @return a new random word from a word bank\r\n   */\r\n  getNewWord() {\r\n    this.randomWord = this.words[Math.floor(Math.random() * this.words.length)];\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      var index = Math.floor(Math.random() * this.wordsBank.length);\r\n      \r\n      if(this.randomWord != this.wordsBank[index]) this.buttons.push(this.wordsBank[index]);\r\n      else i--;\r\n    }\r\n\r\n    var ind = Math.round(Math.random() * 3);\r\n    this.buttons[ind] = this.randomWord;\r\n  }\r\n\r\n  /**\r\n   * @param type is a test type passed (ru->en or en->ru)\r\n   */\r\n  start(type) {\r\n    this.started = true;\r\n    this.getNewWord();\r\n\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * information is being updated and displayed\r\n   */\r\n  updateWords()\r\n  {\r\n    this.words = JSON.parse(localStorage.getItem(\"toRepeatWords\"));\r\n    this.wordsBank = JSON.parse(localStorage.getItem(\"wordsBank\"));\r\n    this.learnedWords = JSON.parse(localStorage.getItem(\"learnedWords\"));\r\n    this.buttons = [];\r\n  }\r\n\r\n  /**\r\n   * @param word is a word user clicks on\r\n   * @function checkWordENRU checks whether user clicked the valid translation\r\n   */\r\n  checkWordENRU(word) {\r\n\r\n    if (word.ruWord == this.randomWord.ruWord) {\r\n      var ind = this.words.indexOf(this.randomWord);\r\n      this.words.splice(ind, 1);\r\n      this.learnedWords.unshift(this.randomWord);\r\n      localStorage.setItem(\"learnedWords\", JSON.stringify(this.learnedWords));\r\n      localStorage.setItem(\"toRepeatWords\", JSON.stringify(this.words));\r\n\r\n      this.updateWords();\r\n      this.getNewWord();\r\n\r\n      var rateCounter = +localStorage.getItem(\"rateCounter\");\r\n      rateCounter++;\r\n\r\n      localStorage.setItem(\"rateCounter\", String(rateCounter));\r\n    } \r\n    else\r\n    {\r\n      this.alertCtrl.create({\r\n        title: 'Неверно',\r\n        subTitle: this.eina(this.randomWord.enWord) + \" -- \" + this.randomWord.ruWord,\r\n        buttons: ['OK']\r\n      }).present();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param word is a word user clicks on\r\n   * @function checkWordRUEN checks whether user clicked the valid translation\r\n   */\r\n  checkWordRUEN(word) {\r\n\r\n    if (word.enWord == this.randomWord.enWord) {\r\n      var ind = this.words.indexOf(this.randomWord);\r\n      this.words.splice(ind, 1);\r\n      this.learnedWords.unshift(this.randomWord);\r\n      localStorage.setItem(\"learnedWords\", JSON.stringify(this.learnedWords));\r\n      localStorage.setItem(\"toRepeatWords\", JSON.stringify(this.words));\r\n\r\n      this.updateWords();\r\n      this.getNewWord();\r\n\r\n      \r\n      var rateCounter = +localStorage.getItem(\"rateCounter\");\r\n      rateCounter++;\r\n\r\n      localStorage.setItem(\"rateCounter\", String(rateCounter));\r\n    } \r\n    else\r\n    {\r\n      this.alertCtrl.create({\r\n        title: 'Неверно',\r\n        subTitle: this.randomWord.ruWord + \" -- \" + this.eina(this.randomWord.enWord),\r\n        buttons: ['OK']\r\n      }).present();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param word is a word typeof string\r\n   * @return same string but in 'eina' font\r\n   */\r\n  eina(text)\r\n  {\r\n    return \"<span class='eina'>\" + text + \"</span>\";\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/word-test/word-test.ts"],"sourceRoot":""}